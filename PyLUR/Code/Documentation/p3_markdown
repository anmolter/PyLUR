Which Type of Predictor Variable would you like to add? {#which-type-of-predictor-variable-would-you-like-to-add style="color:#4485b8; font-size:150%;font-weight:normal;"}
=======================================================

[]{#import}

There are seven types of variables that can be extracted and entered
into the statistical analaysis. Each type of variable can produce
multiple predictors, depending on additional settings such as the number
of buffers distances, the number of categories within a feature class,
or the aggregation/extraction method.

Types of variables {#types-of-variables style="font-size:125%;font-weight:normal;"}
------------------

A.  Polygon Area or Value within Buffer
B.  Line Length or Value within Buffer
C.  Point Count or Value within Buffer
D.  Distance to and/or Value of nearest Polygon
E.  Distance to and/or Value of nearest Line
F.  Distance to and/or Value of nearest Point
G.  Value of nearest Raster cell

[]{#pA}

Polygon Area or Value within Buffer {#polygon-area-or-value-within-buffer style="font-size:125%; font-weight:normal;"}
-----------------------------------

For this type of variable a polygon feature class should be used, which
has a spatial extent that is larger than: the study area + the largest
buffer distance. The polygon feature class should not contain duplicates
or invalid geometries (if uncertain about invalid geometries, run the
Repair Geometries tool prior to using the wizard). The polygon feature
class must contain a text field, which identifies a category for each
polygon. If the feature class contains only one category, a dummy text
field should be created with all rows set to the same value.

### Polygon Area within Buffer {#polygon-area-within-buffer style="font-size:110%;font-weight:normal;"}

![PolygonBufferArea](Images\\PolyInBuffer_MultCategories.jpg){width="400"
height="400"}

This example diagram is based on a polygon feature class with four
categories (A,B,C,D). For a given buffer distance the wizard will
calculate the total area (in the squared unit of the projected
coordinate system) of each category within the buffer, e.g.

-   Total area of category A = Area of A~1~ + Area of A~2~ + Area A~3~
-   Total area of category B = Area of B~1~ + Area of B~2~ + Area B~3~
-   Total area of category C = Area of C~1~ + Area of C~2~ + Area C~3~
-   Total area of category D = Area of D~1~ + Area of D~2~ + Area D~3~ +
    Area D~4~

A real life example of this variable type would be a polygon feature
class of land use. Each category would contain a different type of land
use, for example residential, industrial, natural etc.

### Polygon Value within Buffer {#polygon-value-within-buffer style="font-size:110%;font-weight:normal;"}

![PolygonBufferValue](Images\\PolyInBuffer_MultCatValue.jpg){width="400"
height="400"}

This example diagram is based on a polygon feature class with four
categories (A,B,C,D) and each polygon has a numeric value. For a given
buffer distance the wizard will calculate the total area weighted value
for each category within the buffer, e.g.

-   Total area weighted value of category A = ((Area of A~1~ inside
    buffer ÷ Total Area of A~1~) × Value of A~1~) + ((Area of A~2~
    inside buffer ÷ Total Area of A~2~) × Value of A~2~)
-   Total area weighted value of category B = ((Area of B~1~ inside
    buffer ÷ Total Area of B~1~) × Value of B~1~) + ((Area of B~2~
    inside buffer ÷ Total Area of B~2~) × Value of B~2~)
-   Total area weighted value of category C = ((Area of C~1~ inside
    buffer ÷ Total Area of C~1~) × Value of C~1~) + ((Area of C~2~
    inside buffer ÷ Total Area of C~2~) × Value of C~2~)
-   Total area weighted value of category D = ((Area of D~1~ inside
    buffer ÷ Total Area of D~1~) × Value of D~1~) + ((Area of D~2~
    inside buffer ÷ Total Area of D~2~) × Value of D~2~)

A real life example of this variable type would be a polygon feature
class of population density.

Alternatively, the wizard can calculate the total sum of the product of
the polygon area and the polygon value, e.g.

-   Total sum of product of area and value of category A = (Area of A~1~
    inside buffer × Value of A~1~) + (Area of A~2~ inside buffer × Value
    of A~2~)
-   Total sum of product of area and value of category B = (Area of B~1~
    inside buffer × Value of B~1~) + (Area of B~2~ inside buffer × Value
    of B~2~)
-   Total sum of product of area and value of category C = (Area of C~1~
    inside buffer × Value of C~1~) + (Area of C~2~ inside buffer × Value
    of C~2~)
-   Total sum of product of area and value of category D = (Area of D~1~
    inside buffer × Value of D~1~) + (Area of D~2~ inside buffer × Value
    of D~2~)

A real life example of this variable type would be a polygon feature
class of area emission sources. ????

[Back to top](#TOP)

[]{#pB}

Line Length or Value within Buffer {#line-length-or-value-within-buffer style="font-size:125%;font-weight:normal;"}
----------------------------------

For this type of variable a line feature class should be used, which has
a spatial extent that is larger than: the study area + the largest
buffer distance. The line feature class should not contain
duplicates.The line feature class must contain a text field, which
identifies a category for each line. If the feature class contains only
one category, a dummy text field should be created with all rows set to
the same value.

### Line Length within Buffer {#line-length-within-buffer style="font-size:110%;font-weight:normal;"}

![LineBufferLength](Images\\LineInBuffer_MultCat.jpg){width="400"
height="400"}

This example diagram is based on a line feature class with two
categories (A,B). For a given buffer distance the wizard will calculate
the total length (in the unit of the projected coordinate system) of
each category within the buffer, e.g.

-   Total length of category A = Length of A~1~ + Length of A~2~
-   Total length of category B = Length of B~1~ + Length of B~2~ +
    Length B~3~ + Length B~4~ + Length B~5~ + Length B~6~

A real life example of this variable type would be a line feature class
of roads. Each category would contain a different type of road, for
example motorway, local street etc.

### Line Value within Buffer {#line-value-within-buffer style="font-size:110%;font-weight:normal;"}

![LineBufferValue](Images\\LineInBuffer_MultValue.jpg){width="400"
height="400"}

This example diagram is based on a line feature class with two
categories (A,B) and each line has a numeric value. For a given buffer
distance the wizard will calculate the total length weighted value for
each category within the buffer, e.g.

-   Total length weighted value of category A = ((Length of A~1~ inside
    buffer ÷ Total Length of A~1~) × Value of A~1~) + ((Length of A~2~
    inside buffer ÷ Total Length of A~2~) × Value of A~2~)
-   Total length weighted value of category B = ((Length of B~1~ inside
    buffer ÷ Total Length of B~1~) × Value of B~1~) + ((Length of B~2~
    inside buffer ÷ Total Length of B~2~) × Value of B~2~) + ((Length of
    B~3~ inside buffer ÷ Total Length of B~3~) × Value of B~3~) +
    ((Length of B~4~ inside buffer ÷ Total Length of B~4~) × Value of
    B~4~) + ((Length of B~5~ inside buffer ÷ Total Length of B~5~) ×
    Value of B~5~) + ((Length of B~6~ inside buffer ÷ Total Length of
    B~6~) × Value of B~6~)

A real life example of this variable type would be a line feature class
of traffic counts.

Alternatively, the wizard can calculate the total sum of the product of
the line length and the line value, e.g.

-   Total sum of product of length and value of category A = (Length of
    A~1~ inside buffer × Value of A~1~) + (Length of A~2~ inside buffer
    × Value of A~2~)
-   Total sum of product of length and value of category B = (Length of
    B~1~ inside buffer × Value of B~1~) + (Length of B~2~ inside buffer
    × Value of B~2~) + (Length of B~3~ inside buffer × Value of B~3~) +
    (Length of B~4~ inside buffer × Value of B~4~) + (Length of B~5~
    inside buffer × Value of B~5~) + (Length of B~6~ inside buffer ×
    Value of B~6~) +

A real life example of this variable type would be a line feature class
of traffic counts. &gt;&gt;&gt;ESCAPE USED ONLY THIS ONE&lt;&lt;&lt;

[Back to top](#TOP)

[]{#pC}

Point Count or Value within Buffer {#point-count-or-value-within-buffer style="font-size:125%;font-weight:normal;"}
----------------------------------

For this type of variable a point feature class should be used, which
has a spatial extent that is larger than: the study area + the largest
buffer distance. The point feature class should not contain duplicates.
The point feature class must contain a text field, which identifies a
category for each point. If the feature class contains only one
category, a dummy text field should be created with all rows set to the
same value.

### Point Count within Buffer {#point-count-within-buffer style="font-size:110%;font-weight:normal;"}

![PointBufferCount](Images\\PointInBuffer_MultCat.jpg){width="400"
height="400"}

This example diagram is based on a point feature class with three
categories (A,B,C). For a given buffer distance the wizard will count
the number of points belonging to each category within the buffer, e.g.

-   Total count of category A = {A~1~, A~2~}
-   Total count of category B = {B~1~ }
-   Total count of category C = {C~1~, C~2~}

A real life example of this variable type would be a point feature class
of trees. Each category would contain a different tree species, for
example *Quercus robur, Fagus sylvatica, Cornus sanguinea* etc.

### Point Value within Buffer {#point-value-within-buffer style="font-size:110%;font-weight:normal;"}

![PointBufferValue](Images\\PointInBuffer_MultValue.jpg){width="400"
height="400"}

This example diagram is based on a point feature class with three
categories (A,B,C) and each point has a numeric value. For a given
buffer distance the wizard will calculate the sum of values for each
category within the buffer, e.g.

-   Sum of values of category A = Value of A~1~ + Value of A~2~
-   Sum of values of category B = Value of B~1~
-   Sum of values of category C = Value of C~1~ + Value of C~2~

A real life example of this variable type would be a point feature class
of chimney stacks.

Alternatively, the wizard can calculate the mean or median of the
values, e.g.

-   Mean of values of category A = (Value of A~1~ + Value of A~2~) ÷
    Number of points within buffer belonging to category A
-   Mean of values of category B = Value of B~1~ ÷ Number of points
    within buffer belonging to category B
-   Mean of values of category C = (Value of C~1~ + Value of C) ÷ Number
    of points within buffer belonging to category C~2~

A real life example of this variable type would be ???

[Back to top](#TOP)

[]{#pD}

Distance to and/or Value of nearest Polygon {#distance-to-andor-value-of-nearest-polygon style="font-size:125%;font-weight:normal;"}
-------------------------------------------

For this type of variable a polygon feature class should be used, which
ideally has a spatial extent that is larger than the study area. The
polygon feature class must not contain spatial duplicates or invalid
geometries (if uncertain about invalid geometries, run the Repair
Geometries tool prior to the wizard).

![PolygonDistance](Images\\PolygonDistance.jpg){width="650"
height="350"}

This example diagram shows a feature class of non-contiguous polygons
with different values for each feature. For each monitoring site the
wizard will identify the nearest polygon and calculate one or more of
the following options:

-   Distance = The distance to the nearest polygon (in the unit of the
    projected coordinate system)
-   Inverse distance = 1 ÷ distance to the nearest polygon
-   Inverse distance squared = 1 ÷ (distance to the nearest polygon)^2^
-   Value = The value of the nearest polygon
-   Value \* Distance = The value of the nearest polygon × the distance
    to the nearest polygon
-   Value \* Inverse distance = The value of the nearest polygon × (1 ÷
    distance to the nearest polygon)
-   Value \* Inverse distance squared = The value of the nearest polygon
    × (1 ÷ (distance to the nearest polygon)^2^)

A real life example of this variable type would be ???

If the monitoring site is located on top of a polygon (i.e. the distance
is zero) the Inverse distance, Inverse distance squared, Value \*
Inverse Distance, and Value \* Inverse distance squared options will
produce a division by zero error and the result for the feature will be
set to **missing**. The Distance and Value \* Distance options will
produce a result of **zero**. Therefore, the user should carefully
inspect the data in ArcMap prior to using these options.

[Back to top](#TOP)

[]{#pE}

Distance to and/or Value of nearest Line {#distance-to-andor-value-of-nearest-line style="font-size:125%;font-weight:normal;"}
----------------------------------------

For this type of variable a line feature class should be used, which
ideally has a spatial extent that is larger than the study area. The
line feature class must not contain spatial duplicates.

![LineDistance](Images\\LineDistance.jpg){width="660" height="570"}

This example diagram shows a line feature class with different values
for each feature. For each monitoring site the wizard will identify the
nearest line and calculate one or more of the following options:

-   Distance = The distance to the nearest line (in the unit of the
    projected coordinate system)
-   Inverse distance = 1 ÷ distance to the nearest line
-   Inverse distance squared = 1 ÷ (distance to the nearest line)^2^
-   Value = The value of the nearest line
-   Value \* Distance = The value of the nearest line × the distance to
    the nearest line
-   Value \* Inverse distance = The value of the nearest line × (1 ÷
    distance to the nearest line)
-   Value \* Inverse distance squared = The value of the nearest line ×
    (1 ÷ (distance to the nearest line)^2^)

A real life example of this variable type would be roads with traffic
counts.

If the monitoring site is located on top of a line (i.e. the distance is
zero) the Inverse distance, Inverse distance squared, Value \* Inverse
Distance, and Value \* Inverse distance squared options will produce a
division by zero error and the result for the feature will be set to
**missing**. The Distance and Value \* Distance options will produce a
result of **zero**. Therefore, the user should carefully inspect the
data in ArcMap prior to using these options.

[Back to top](#TOP)

[]{#pF}

Distance to and/or Value of nearest Point {#distance-to-andor-value-of-nearest-point style="font-size:125%;font-weight:normal;"}
-----------------------------------------

For this type of variable a point feature class should be used, which
ideally has a spatial extent that is larger than the study area. The
point feature class must not contain spatial duplicates.

![PointDistance](Images\\PointDistance.jpg){width="650" height="583"}

This example diagram shows a point feature class with different values
for each feature. For each monitoring site the wizard will identify the
nearest point and calculate one or more of the following options:

-   Distance = The distance to the nearest point (in the unit of the
    projected coordinate system)
-   Inverse distance = 1 ÷ distance to the nearest point
-   Inverse distance squared = 1 ÷ (distance to the nearest point)^2^
-   Value = The value of the nearest point
-   Value \* Distance = The value of the nearest point × the distance to
    the nearest point
-   Value \* Inverse distance = The value of the nearest point × (1 ÷
    distance to the nearest point)
-   Value \* Inverse distance squared = The value of the nearest point ×
    (1 ÷ (distance to the nearest point)^2^)

A real life example of this variable type would be chimney stacks???

If the monitoring site is located on top of a point (i.e. the distance
is zero) the Inverse distance, Inverse distance squared, Value \*
Inverse Distance, and Value \* Inverse distance squared options will
produce a division by zero error and the result for the feature will be
set to **missing**. The Distance and Value \* Distance options will
produce a result of **zero**. Therefore, the user should carefully
inspect the data in ArcMap prior to using these options.

[Back to top](#TOP)

[]{#pG}

Value of nearest Raster cell {#value-of-nearest-raster-cell style="font-size:125%;font-weight:normal;"}
----------------------------

Not recommended. Raster data is mostly wrong and raster analyses usually
fail or crash ArcMap or the computer.

For this type of variable a raster file should be used, which ideally
has a spatial extent that is larger than the study area. The wizard will
grab the value of the raster cell that the point is on.

[Back to top](#TOP)
